#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_x86_64

on: 
  #release:
  #  types: [published]

  push:
    branches: 
      - master

  schedule:
    - cron: 0 2 * * 5
  
  #watch:
  #  types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev python3.6 zlib1g-dev upx-ucl node-uglify antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/zfdang/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
   #    sed -i '5s/#//' feeds.conf.default
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    #- name: Import external feeds
    #  working-directory: ./openwrt
    #  run: |
    #    git clone https://github.com/Lienol/openwrt-package package/lienol
    #    git clone "your_github_link" package/"your_folder_name"      

    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s


    - name : Upload artifact - All
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt-All.zip
        path: openwrt/bin

    - name : Upload artifact - Firmware Image
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt-Images.zip
        path: openwrt/bin/targets/x86/64/*.img

    - name : Upload artifact - Firmware VirtualBox Image
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt-Virtualbox.zip
        path: openwrt/bin/targets/x86/64/*.vdi

    - name : Upload artifact - Firmware VMware Image
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt-WMware.zip
        path: openwrt/bin/targets/x86/64/*.vmdk

    - name : Upload artifact - Package
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt-Packages.zip
        path: openwrt/bin/packages/x86_64


    - name: Create ZIPs
      working-directory: ./openwrt
      run: |
        zip ./openwrt-images.zip ./bin/targets/x86/64/
        zip ./openwrt-packages.zip ./bin/packages


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

    - name: Upload Release Asset - Images
      id: upload-release-asset-images
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./openwrt/openwrt-images.zip
          asset_name: openwrt-images.zip
          asset_content_type: application/zip

    - name: Upload Release Asset - Packages
      id: upload-release-asset-packages
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./openwrt/openwrt-packages.zip
          asset_name: openwrt-packages.zip
          asset_content_type: application/zip
